server:
  port: 8083

spring:
  application:
    name: transaction-service

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5434/transactiondb}
    username: ${DB_USERNAME:user}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer


eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true

resilience4j:
  circuitbreaker:
    instances:
      account-service:
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10000
        permitted-number-of-calls-in-half-open-state: 3
        minimum-number-of-calls: 5
        
  retry:
    instances:
      account-service:
        max-attempts: 3
        wait-duration: 1000
        exponential-backoff-multiplier: 2
        
  timelimiter:
    instances:
      account-service:
        timeout-duration: 5000

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

services:
  account-service:
    url: http://localhost:8082
